---
layout: default
title: Rails Girls App Tutorial
permalink: app
---

# Desarrolla tu primera aplicación

*Created by Vesa Vänskä, [@vesan](https://twitter.com/vesan)*

**Asegúrate de tener instalado Rails.** [**Sigue la guía de instalación**](/install) si aún no lo has instalado.


## Conozca las herramientas

<div class="indent" markdown="1">

<h3><i class="icon-text-editor">&nbsp;</i></h3>
<<<<<<< HEAD
### Editor de Texto

[Sublime Text](http://www.sublimetext.com), [Komodo Edit](http://www.activestate.com/komodo-edit), Vim, Emacs, y Gedit son ejemplos de editors de textos que podrás usar para escribir código y editar archivos.

<h3><i class="icon-prompt">&nbsp;</i></h3>
### Terminal (Conocido como Command Prompt en Windows)
Es el lugar donde inicias el servidor Rails y ejecutas comandos.

<h3><i class="icon-browser">&nbsp;</i></h3>
### Navegador web
(Firefox, Safari, Chrome) para vizualizar tu aplicación.
=======

### Text Editor

* [Atom](https://atom.io/), [Sublime Text](http://www.sublimetext.com),  Vim and Emacs are examples of text editors your can use for writing code and editing files.

<h3><i class="icon-prompt">&nbsp;</i></h3>

### Terminal (known as Command Prompt on Windows)

* Where you start the rails server and run commands.

<h3><i class="icon-browser">&nbsp;</i></h3>

### Web browser

* (Firefox, Safari, Chrome) for viewing your application.
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

</div>

### Important

It is important that you select the instructions specific to your operating system - the commands you need to run on a Windows computer are slightly different to Mac or Linux. If you're having trouble check the Operating System switcher at the bottom of the commands. In case you're using a cloud service (e.g. nitrous), you need to run the Linux commands even if you are on a Windows computer.

## *1.*Creando la applicación

Vamos a iniciar creando una nueva aplicación llamada *railsgirls*.

Primero, abrimos una terminal:

<<<<<<< HEAD
* Mac OS X: Abre Spotlight, digite *Terminal* y click en la applicación *Terminal*.
* Windows: Click en Inicio y busca *Comando Prompt*, luego click *Comando Prompt con Ruby on Rails*.
* Linux (Ubuntu): Buscar por *Terminal* en el dash y click *Terminal*.
=======
* Mac OS X: Open Spotlight, type *Terminal* and click the *Terminal* application.
* Windows: Click Start and look for *Command Prompt*, then click *Command Prompt with Ruby on Rails*.
* Linux (Ubuntu/Fedora): Search for *Terminal* on the dash and click *Terminal*.
* Cloud service (e.g. nitrous): Log in to your account, start your box and switch to its IDE (see [installation guide](/install#using-a-cloud-service) for details). The terminal is usually at the bottom of your browser window.
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

Luego, digite estos comandos en el terminal:

<div class="os-specific">
  <div class="nix">
{% highlight sh %}
mkdir projects
{% endhighlight %}

    <div>
<p>You can verify that a directory named <code>projects</code> was created by running the list command: <code>ls</code>. You should see the <code>projects</code> directory in the output. Now you want to change the directory you are currently in to the <code>projects</code> folder by running:</p>
    </div>

{% highlight sh %}
cd projects
{% endhighlight %}

    <div>
<p>You can verify you are now in an empty directory or folder by again running the <code>ls</code> command. Now you want to create a new app called <code>railsgirls</code> by running:</p>
    </div>

{% highlight sh %}
rails new railsgirls
{% endhighlight %}

    <div>
<p>This will create a new app in the folder <code>railsgirls</code>, so we again want to change the directory to be inside of our rails app by running:</p>
    </div>

{% highlight sh %}
cd railsgirls
{% endhighlight %}

    <div>
<p>If you run <code>ls</code> inside of the directory you should see folders such as <code>app</code> and <code>config</code>. You can then start the rails server by running:</p>
    </div>

{% highlight sh %}
rails server
{% endhighlight %}
  </div>

  <div class="win">
{% highlight sh %}
mkdir projects
{% endhighlight %}

    <div>
<p>You can verify that a directory named <code>projects</code> was created by running the list command: <code>dir</code>. You should see the <code>projects</code> directory in the output. Now you want to change the directory you are currently in to the <code>projects</code> folder by running:</p>
    </div>

{% highlight sh %}
cd projects
<<<<<<< HEAD
rails new railsgirls
cd railsgirls
rails server
=======
{% endhighlight %}

    <div>
<p>You can verify you are now in an empty directory or folder by again running the <code>dir</code> command. Now you want to create a new app called <code>railsgirls</code> by running:</p>
    </div>

{% highlight sh %}
rails new railsgirls
{% endhighlight %}

    <div>
<p>This will create a new app in the folder <code>railsgirls</code>, so we again want to change the directory to be inside of our rails app by running:</p>
    </div>

{% highlight sh %}
cd railsgirls
{% endhighlight %}

    <div>
<p>If you run <code>dir</code> inside of the directory you should see folders such as <code>app</code> and <code>config</code>. You can then start the rails server by running:</p>
    </div>

{% highlight sh %}
rails server
{% endhighlight %}
  </div>
</div>

Open <http://localhost:3000> in your browser. If you are using a cloud service (e.g. nitrous), use its preview functionality instead (see [installation guide](/install#using-a-cloud-service) for details).

You should see "Welcome aboard" page, which means that the generation of your new app worked correctly.

Notice in this window the command prompt is not visible because you are now in the Rails server, the command prompt looks like this:

<div class="os-specific">
  <div class="nix">
{% highlight sh %}
$
{% endhighlight %}
  </div>
  <div class="win">
{% highlight sh %}
>
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278
{% endhighlight %}
  </div>
</div>

<<<<<<< HEAD
Abre [http://localhost:3000](http://localhost:3000) en tu navegador. Debería verse una página "Welcome aboard", lo que significa que la generación de tu nueva aplicación esta funcionando correctamente.

Presione `CTRL-C` en la terminal para salir del servidor.
=======
When the command prompt is not visible you cannot execute new commands. If you try running `cd` or another command it will not work. To return to the normal command prompt:

Hit <kbd>Ctrl</kbd>+<kbd>C</kbd> in the terminal to quit the server.
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

**Coach:** Explique que hace cada comando. ¿Qué fue generado? ¿Quá hace el servidor?


## *2.*Crear idea scaffold

Vamos a usar la funcionalidad de scaffold para generar un punto de partida que nos permita listar, agregar, eliminar, editar, y ver cosas; en nuestro caso ideas.

**Coach:** ¿Qué es Rails scaffolding? (Explique el comando, el nombre de modelo y la relación de tablas en la base de datos, nombrando las convenciones, atributos y tipos, etc.) ¿Qué son las migraciones y por qué son necesarias?

{% highlight sh %}
rails generate scaffold idea name:string description:text picture:string
{% endhighlight %}

The scaffold creates new files in your project directory, but to get it to work properly we need to run a couple of other commands to update our database and restart the server.

<div class="os-specific">
  <div class="nix">
{% highlight sh %}
bin/rake db:migrate
rails server
{% endhighlight %}
  </div>

  <div class="win">
{% highlight sh %}
<<<<<<< HEAD
rails generate scaffold idea name:string description:text picture:string
rake db:migrate
=======
ruby bin/rake db:migrate
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278
rails server
{% endhighlight %}
  </div>
</div>

<<<<<<< HEAD
Abre [http://localhost:3000/ideas](http://localhost:3000/ideas) en tu navegador. Prueba lo que tienes ejecutando, con estas pocas líneas de comando.

Presione `CTRL-C` en la terminal para salir del servidor.
=======
Open <http://localhost:3000/ideas> in your browser. Cloud service (e.g. nitrous) users need to append '/ideas' to their preview url instead (see [installation guide](/install#using-a-cloud-service)).

Click around and test what you got by running these few command-line commands.

Hit <kbd>Ctrl</kbd>+<kbd>C</kbd> to quit the server again when you've clicked around a little.
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278


## *3.*Diseño

**Coach:** Hable acerca de la relación entre HTML y Rails. ¿Qué parte de las vistas es HTML y qué es Ruby Embebido (ERB)? ¿Qué es MVC y cómo se relaciona con todo esto? (Modelos y controladores son responsables para la generacion de las vistas con HTML.)

La aplicación no se ve muy bien aún. Vamos a hacer algo con esto. Usaremos el proyecto Twitter Bootstrap para darle un mejor estilo.

Abre `app/views/layouts/application.html.erb` en tu editor de texto y encima de la linea

{% highlight erb %}
<%= stylesheet_link_tag "application", media: "all", "data-turbolinks-track" => true %>
{% endhighlight %}

incluya

{% highlight erb %}
<link rel="stylesheet" href="//railsgirls.com/assets/bootstrap.css">
<link rel="stylesheet" href="//railsgirls.com/assets/bootstrap-theme.css">
{% endhighlight %}

y reemplace

{% highlight erb %}
<%= yield %>
{% endhighlight %}

por

{% highlight erb %}
<div class="container">
  <%= yield %>
</div>
{% endhighlight %}

Tambíen vamos agregar un barra de navegación y un pie de página en nuestro layout. En el mismo archivo, debajo de `<body>` agregar

{% highlight html %}
<nav class="navbar navbar-default navbar-fixed-top" role="navigation">
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="/">The Idea app</a>
    </div>
    <div class="collapse navbar-collapse">
      <ul class="nav navbar-nav">
        <li class="active"><a href="/ideas">Ideas</a></li>
      </ul>
    </div>
  </div>
</nav>
{% endhighlight %}

y antes de `</body>` agregar

{% highlight html %}
<footer>
  <div class="container">
    Rails Girls 2015
  </div>
</footer>
<script src="//railsgirls.com/assets/bootstrap.js"></script>
{% endhighlight %}

Ahora además vamos a cambiar el stilo de la tabla ideas. Abre `app/assets/stylesheets/application.css` y al final agregar

{% highlight css %}
body { padding-top: 100px; }
footer { margin-top: 100px; }
table, td, th { vertical-align: middle; border: none; }
th { border-bottom: 1px solid #DDD; }
{% endhighlight %}

<<<<<<< HEAD
No se olvide de iniciar el servidor nuevamente:

{% highlight sh %}
rails server
{% endhighlight %}

Ahora refresque el navegador para ver qué fue cambiado. Además puedes cambiar el HTML & CSS libremente.
=======
Now make sure you saved your files and refresh the browser to see what was changed. You can also change the HTML & CSS further.

In case your Terminal shows you an error message that *sort of* implies there is something wrong with your JavaScript or CoffeeScript, install [nodejs](http://nodejs.org/download/). This issue should not appear when you've used the RailsInstaller (but when you've installed Rails via ```gem install rails```).
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

**Coach:** Hable un poco acerca de CSS y layouts.


<<<<<<< HEAD
## Paso 4: Agregando subida de imagenes
=======
## *4.*Adding picture uploads
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

Necesitamos instalar una pieza de sotfware para nuestra subida de imagenes en Rails.

Abre `Gemfile` en el directorio del proyecto usando tu editor texto y debajo de la linea

{% highlight ruby %}
gem 'sqlite3'
{% endhighlight %}

Agregue

{% highlight ruby %}
gem 'carrierwave'
{% endhighlight %}

**Coach:** Explique qué son las librerias y por qué son muy útiles. Describe qué es el software open source.

<<<<<<< HEAD
En la terminal ejecute:
=======
Hit <kbd>Ctrl</kbd>+<kbd>C</kbd> in the terminal to quit the server.

In the terminal run:
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

{% highlight sh %}
bundle
{% endhighlight %}

<<<<<<< HEAD
En este punto necesitamos **reiniciar el proceso del servidor Rails** en la terminal. Es necesario para que la aplicación cargue la libreria adicionada.

Ahora podemos generar el código para el manejo de uploads. En la terminal ejecutar:
=======
Now we can generate the code for handling uploads. In the terminal run:
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

{% highlight sh %}
rails generate uploader Picture
{% endhighlight %}

<<<<<<< HEAD
Abre `app/models/idea.rb` y debajo de la línea
=======
Please start the rails server now.

Note: Some people might be using a second terminal to run the rails server continuously.
If so you need to **restart the Rails server process** now.
This is needed for the app to load the added library.

Open `app/models/idea.rb` and under the line
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

{% highlight ruby %}
class Idea < ActiveRecord::Base
{% endhighlight %}

agregue

{% highlight ruby %}
mount_uploader :picture, PictureUploader
{% endhighlight %}

Abre `app/views/ideas/_form.html.erb` y cambie

{% highlight erb %}
<%= f.text_field :picture %>
{% endhighlight %}

a

{% highlight erb %}
<%= f.file_field :picture %>
{% endhighlight %}

<<<<<<< HEAD
En tu navegador, agregar nueva idea con una imagen. Cuando cargas una imagen no se ve bien, porque te muestra sólo la ruta del archivo, Así que vamos arreglar eso.
=======
Sometimes, you might get an *TypeError: can't cast ActionDispatch::Http::UploadedFile to string*.

If this happens, in file `app/views/ideas/_form.html.erb` change the line

{% highlight erb %}
<%= form_for(@idea) do |f| %>
{% endhighlight %}

to

{% highlight erb %}
<%= form_for @idea, :html => {:multipart => true} do |f| %>
{% endhighlight %}

In your browser, add new idea with a picture. When you upload a picture it doesn't look nice because it only shows a path to the file, so let's fix that.
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

Abre `app/views/ideas/show.html.erb` y cambie

{% highlight erb %}
<%= @idea.picture %>
{% endhighlight %}

a

{% highlight erb %}
<%= image_tag(@idea.picture_url, :width => 600) if @idea.picture.present? %>
{% endhighlight %}

Ahora refresca tu navegador para ver los cambios.

**Coach:** Hable un poco acerca de HTML.


<<<<<<< HEAD
## Paso 5: Ajustes finales en las rutas

Si al abrir [http://localhost:3000](http://localhost:3000) aún seguiremos viendo la página "Welcome aboard". Vamos a redireccionar a la página de ideas.

En Mac OS X y Linux, en la terminal ejecute:
=======
## *5.*Finetune the routes

Open <http://localhost:3000> (or your preview url, if you are using a cloud service). It still shows the "Welcome aboard" page. Let's make it redirect to the ideas page.

Open `config/routes.rb` and after the first line add
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

{% highlight ruby %}
root :to => redirect('/ideas')
{% endhighlight %}

<<<<<<< HEAD
En Windows, en el command prompt ejecute:
=======
Test the change by opening the root path (that is, <http://localhost:3000/> or your preview url) in your browser.
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

**Coach:** Talk about routes, and include details on the order of routes and their relation to static files.

<<<<<<< HEAD
Luego abre `config/routes.rb` y después de la primera linea agregar
=======
**Rails 3 users:** You will need to delete the index.html from the `/public/` folder for this to work.
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

## Create static page in your app

Lets add a static page to our app that will hold information about the author of this application — you!

{% highlight sh %}
rails generate controller pages info
{% endhighlight %}

<<<<<<< HEAD
Verifique el cambio abriendo la ruta raiz en tu navegador.

**Coach:** Hable acerca de routes.
=======
This command will create you a new folder under `app/views` called `/pages` and under that a file called `info.html.erb` which will be your info page.

It also adds a new simple route to your routes.rb.

{% highlight ruby %}
get "pages/info"
{% endhighlight %}
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

Now you can open the file `app/views/pages/info.html.erb` and add information about you in HTML. To see your new info page, take your browser to <http://localhost:3000/pages/info> or, if you are a cloud service user, append '/pages/info' to your preview url.

<<<<<<< HEAD
## ¿Qué sigue?
=======
## *6+.*What next?
>>>>>>> 5d6cda4fa8e5afb4858c87bc42efc90277e81278

* Agregar diseño usando HTML &amp; CSS
* Agregar ratings
* Use CoffeeScript (o JavaScript) para adicionar interacción
* Agregar redimencionamiento de imagen para que la carga de imagenes sea más rápido


## Guías adicionales

* Guide 0: [Handy cheatsheet for Ruby, Rails, console etc.](https://github.com/PragTob/rails-beginner-cheatsheet)
* Guide 1: [Add commenting by Janika Liiv](/commenting)
* Guide 2: [Put your app online with Heroku by Terence Lee](/heroku) / [Put your app online with OpenShift by Katie Miller](/openshift) / [Put your app online with Shelly Cloud](/shellycloud) / [Put your app online with anynines](/anynines) / [Put your app online with Trucker.io](/trucker)
* Guide 3: [Create thumbnail images for the uploads by Miha Filej](/thumbnails)
* Guide 4: [Add design using HTML &amp; CSS by Alex Liao](/design)
* Guide 5: [Add Authentication (user accounts) with Devise by Piotr Steininger](/devise/)
* Guide 6: [Adding profile pictures with Gravatar](/gravatar)
* Guide 7: [Test your app with RSpec](/testing-rspec)
* Guide 8: [Continuous Deployment with Travis-CI](/continuous-travis) / [Continuous Deployment with Codeship](/continuous)
* Guide 9: [Go through additional explanations for the App by Lucy Bain](https://github.com/lbain/railsgirls)
